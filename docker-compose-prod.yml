version: '3.7'

services:

  backend:
    container_name: fit-friends_backend-prod
    build:
      context: ./
      cache_from:
        - friends-base:1.0
      dockerfile: ./apps/backend/Dockerfile
      args:
        NODE_ENV: "production"
        BUILD_FLAG: ""
    image: friends-backend-prod:1.0
    env_file:
      - ./apps/backend/.env
    ports:
      - 5000:5000
    environment:
      NODE_ENV: "production"
      PORT: 5000
    depends_on:
      - database
    networks:
      - corp
    restart: on-failure

  frontend:
    container_name: fit-friends_frontend-prod
    build:
      context: ./
      cache_from:
        - nginx:1.19.2
      dockerfile: ./apps/frontend/Dockerfile
      args:
        NODE_ENV: "production"
        BUILD_FLAG: ""
    image: friends-frontend-prod:1.0
    ports:
      - 4200:80
    environment:
      NODE_ENV: "production"
      PORT: 4200
    depends_on:
      - database
      - backend
    networks:
      - corp
    restart: on-failure

  database:
    container_name: fit-friends_db
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: fit-friends
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    networks:
      - corp

  mailhog:
    container_name: fit-friends_smtp
    image: mailhog/mailhog
    logging:
      driver: 'none'
    ports:
      - 1025:1025 
      - 8025:8025 
    networks:
      - corp

networks:
  corp:
    driver: bridge

volumes:
  db_data:
